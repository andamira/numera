[alias]

# CHECK
# std
c = "check"
cr = "check --release"
ca = "check --features=all"
# no-std
cn = "check --no-default-features --features=safe,all_nostd"
cnu = "check --no-default-features --features=all_nostd"
# no-alloc
cN = "check --target thumbv7m-none-eabi --no-default-features --features=safe,all_nostd"
cNu = "check --target thumbv7m-none-eabi --no-default-features --features=all_nostd"
# Fast
cF = "check --no-default-features --features=std,safe"
cuF = "check --no-default-features --features=std"
## Fast all
caF = "check --no-default-features --features=std,safe,all_fast"
craF = "check --release --no-default-features --features=std,safe,all_fast"
cauF = "check --no-default-features --features=std,all"
## Fast no-std
cnF = "check --no-default-features --features=safe"
cnuF = "check --no-default-features"
## Fast no-alloc
cNF = "check --target thumbv7m-none-eabi --no-default-features --features=safe"
cNuF = "check --target thumbv7m-none-eabi --no-default-features"

# CLIPPY
# std
cl = "clippy"
clr = "clippy --release"
clu = "clippy --no-default-features --features=std"
# all
cla = "clippy --features=all"
clra = "clippy --release --features=all"
clau = "clippy --no-default-features --features=std,all"
clru = "clippy --release --no-default-features --features=std"
clrau = "clippy --release --no-default-features --features=std,all"
# no-std
cln = "clippy --no-default-features --features=safe"
clrn = "clippy --release --no-default-features --features=safe"
clnu = "clippy --no-default-features"
clrnu = "clippy --release --no-default-features"
# no-alloc
clNF = "clippy --target thumbv7m-none-eabi --no-default-features --features=safe"
clNuF = "clippy --target thumbv7m-none-eabi --no-default-features"
# Fast
clF = "clippy --no-default-features --features=std,safe"
cluF = "clippy --no-default-features --features=std"
claF = "clippy --no-default-features --features=std,safe,all_fast"
clnF = "clippy --no-default-features --features=safe"
clnuF = "clippy --no-default-features"

# CLEAN PACKAGE
cp = "clean --package"
crp = "clean --release --package"

# DOC
d = "doc --no-deps"
do = "doc --no-deps --open"
dd = "doc"
ddo = "doc --open"
#
da = "doc --no-deps --features=all"
doa = "doc --no-deps --open --features=all"
#
dn = "doc --no-deps --no-default-features"
don = "doc --no-deps --open --no-default-features"
# +nightly, document everything
## unsafe
nd = "doc --no-deps --no-default-features --features=nightly,std,all"
ndo = "doc --no-deps --no-default-features --open --features=nightly,std,all"
## safe
nds = "doc --no-deps --features=nightly,all"
ndso = "doc --no-deps --open --features=nightly,all"
# Fast
ndF = "doc --no-deps --no-default-features --features=nightly,std,all_fast"
ndoF = "doc --no-deps --no-default-features --open --features=nightly,std,all_fast"

# BUILD
b = "build"
bb = "build --bin"
br = "build --release"
brb = "build --release --bin"
# examples
be = "build --example"
bea = "build --example --features=all" # all
bre = "build --release --example"
brue = "build --release --example --no-default-features --features=std,try_from" # unsafe
# examples, Fast compilation
beF = "build --no-default-features --features=std,safe --example"
beaF = "build --no-default-features --features=std,safe,all --example"
breF = "build --release --example --no-default-features --features=std,safe"
breaF = "build --release --no-default-features --features=std,safe,all --example"

# RUN
r = "run"
rb = "run --bin"
rr = "run --release"
rrb = "run --release --bin"
# examples
re = "run --example"
rea = "run --features=all --example" # all
rre = "run --release --example"
rrue = "run --release --no-default-features --features=std,try_from --example"
# examples, Fast compilation
reF = "run --no-default-features --features=std,safe --example"
reaF = "run --no-default-features --features=std,safe,all --example"
rreF = "run --release --no-default-features --features=std,safe --example"
rreaF = "run --release --no-default-features --features=std,safe,all --example"

# TEST
# std, safe
t = "test"
td = "test --doc"
t_ = "test -- --nocapture"
t_1 = "test -- --test-threads 1 --nocapture"
# std, safe, all dependencies
ta = "test --features=all"
tda = "test --features=all --doc"
ta_ = "test --features=all -- --nocapture"
ta_1 = "test --features=all -- --test-threads 1 --nocapture"
# std, unsafe
tu = "test --no-default-features --features=std"
tdu = "test --no-default-features --features=std --doc"
tu_ = "test --no-default-features --features=std -- --nocapture"
tu_1 = "test --no-default-features --features=std -- --test-threads 1 --nocapture"
# no-std, unsafe
tn = "test --no-default-features"
tdn = "test --no-default-features --doc"
tn_ = "test --no-default-features -- --nocapture"
tn_1 = "test --no-default-features -- --test-threads 1 --nocapture"
# Fast
tF = "test --no-default-features --features=std,safe" # std,safe
tnF = "test --no-default-features --features=safe" # no-std, safe
tdF = "test --doc --no-default-features --features=std,safe" # std, safe, docs
t_F = "test --no-default-features --features=std,safe -- --nocapture"

# PUBLISH
p = "publish --dry-run"
pa = "publish --dry-run --allow-dirty"
pp = "publish"
ppa = "publish --allow-dirty"

# Cargo subcommands:
## cargo-expand
E = "expand"
Eb = "expand --bin"
Ee = "expand --example"
El = "expand --lib"

[build]
rustdocflags = [ "--html-in-header", "./res/rustdoc-header.html"]
